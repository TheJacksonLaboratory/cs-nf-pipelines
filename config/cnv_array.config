//====================  Nextflow/Container Config  ==========

manifest {
    name = "iaap_cli"
    description = 'Pipeline for processing of IAAP CLI samples.'
    author = 'Your Name, Your Organization'
    version = "0.1.0"
}

params {

    // Shared params
    idat_folder = null
    bpm_file = null
    egt_file = null
    output_dir = './'  // Default to current directory
    organize_by = 'idat'  // Organize by idat folder
    pubdir = './results'  // Default publication directory

    // Tool-specific params
    iaap_cli_version = 'v2'
    container = "quay.io/jaxcompsci/gtc2vcf_with_tools:${params.iaap_cli_version}"
    mem_threshold = 60.GB
    low_memory = 8.GB
    high_memory = 24.GB
    low_time = '03:00:00'
    high_time = '12:00:00'
}

process {
    withName: IAAP_CLI {
        cpus = 4
        memory { params.idat_folder.size() < params.mem_threshold ? params.low_memory : params.high_memory }
        time { params.idat_folder.size() < params.mem_threshold ? params.low_time : params.high_time }
        container = params.container
        errorStrategy {
            (task.exitStatus == 140) ? {
                log.info "\n\nError code: ${task.exitStatus} for task: ${task.name}. Likely caused by the task wall clock: ${task.time} or memory: ${task.memory} being exceeded.\nAttempting orderly shutdown.\nSee .command.log in: ${task.workDir} for more info.\n\n"
                return 'finish'
            }.call() : 'finish'
        }
    }
}

// Default configuration
executor {
    name = 'local'
    cpus = 4
    memory = '8 GB'
}

docker {
    enabled = true
}

report {
    enabled = true
    file = "${params.pubdir}/report.html"
}

timeline {
    enabled = true
    file = "${params.pubdir}/timeline.html"
}

trace {
    enabled = true
    file = "${params.pubdir}/trace.txt"
}

params {
    // Log parameter information
    def param_log = { log.info("Parameter: ${it.key} = ${it.value}") }
    params.each(param_log)
}