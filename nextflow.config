params{
  help = null
  genome = null
  delly_genome = null
  delly_exc= null
  fastq1 = null
  fastq2 = null
  bam = null
  seqmode = null
  pbaligner = null
  pbmode = null
  pbsv_tandemrepeats = null
  vcfs = null
  names = null
  outdir = null
  cnvpytor_bin = 1000
  igenomes_base = 's3://ngi-igenomes/igenomes/'
  igenomes_ignore = false
  params.delly_base = "https://raw.githubusercontent.com/dellytools/delly/master/excludeTemplates/"
  genomes_base = null // Disabled by default
  save_reference = null // Built references not saved
  markdup_java_options = '"-Xms4000m -Xmx7g"' // Established values for markDuplicates memory consumption, see https://github.com/SciLifeLab/Sarek/pull/689 for details
}
// Load genomes.config or igenomes.config
if (!params.igenomes_ignore) {
  includeConfig 'conf/igenomes.config'
} else {
  includeConfig 'conf/genomes.config'
}

process{
  withLabel:cpus_8{
    cpus = 8
    time= '72:00:00'
    memory = '250.GB'
    maxRetries = 1
    clusterOptions = '-q batch'
    errorStrategy = 'retry'
  }
  withLabel:cpus_24{
    cpus = 24
    time= '7d'
    memory = '250.GB'
    maxRetries = 1
    clusterOptions = '-q long'
    errorStrategy = 'terminate'
  }
  withLabel:high_mem{
    cpus = 8
    time = '72:00:00'
    memory = '350.GB'
    clusterOptions = '-q batch'
  }
  withLabel:single_cpu{
    cpus = 1
    time = '72:00:00'
    memory = '100.GB'
    clusterOptions = '-q batch'
    maxRetries = 1
    errorStrategy = 'retry'
  }

  withLabel:tiny_job{
    cpus = 1
    time = '0:10:00'
    memory = '1.GB'
    clusterOptions = '-q batch'
    maxRetries = 1
    errorStrategy = 'retry'
  }
  withLabel:mid_job{
    cpus = 1
    time = '0:30:00'
    memory = '20.GB'
    clusterOptions = '-q batch'
    maxRetries = 1
    errorStrategy = 'retry'
  }
  withLabel:short_himem{
    cpus = 1
    time = '00:30:00'
    memory = '100.GB'
    clusterOptions = '-q batch'
    maxRetries = 1
    errorStrategy = 'retry'
  }
  withLabel:long_himem{
    cpus = 1
    time = '2:00:00'
    memory = '100.GB'
    clusterOptions = '-q batch'
    maxRetries = 1
    errorStrategy = 'retry'
  }
  withLabel:gatk{
    container = 'quay.io/biocontainers/gatk4:4.1.8.1--py38_0'
  }
  withLabel:samtools{
    container = 'quay.io/biocontainers/samtools:1.10--h9402c20_2'
  }
  withLabel:samtools_1_9{
    container = 'quay.io/biocontainers/samtools:1.9--h10a08f8_12'
  }
  withLabel:bwa{
    container = 'quay.io/biocontainers/bwa:0.7.17--hed695b0_6'
  }
  withLabel:bcftools{
    container = 'quay.io/biocontainers/bcftools:1.10.2--h4f4756c_3'
  }
  withLabel:lumpy{
    container = 'quay.io/jaxcompsci/lumpy-ref_data:0.3.1--2'
  }
  withLabel:breakdancer{
    container = 'quay.io/biocontainers/breakdancer:1.4.5--h25a10a7_7'
  }
  withLabel:python{
    container = 'docker://python'
  }
  withLabel:python2{
    container = 'docker://python:2.7.18'
  }
  withLabel:perl{
    container = 'docker://perl'
  }
  withLabel:cnmops{
    container = 'quay.io/biocontainers/bioconductor-cn.mops:1.34.0--r40h5f743cb_0'
  }
  withLabel:hydra{
    container = 'quay.io/biocontainers/hydra-multi:0.5.4--py27h8b12597_0'
  }
  withLabel:ucsc{
    container = 'quay.io/biocontainers/ucsc-fatotwobit:377--h446ed27_3'
  }
  withLabel:bxpython{
    container = 'quay.io/biocontainers/bx-python:0.8.9--py27h54ae540_2'
  }
  withLabel:delly{
    container = 'quay.io/jaxcompsci/delly-ref_data:0.8.3--hf3ca161_1'
  }
  withLabel:cnvpytor{
    container = 'quay.io/biocontainers/cnvpytor:1.0--py38h3252c3a_1'
  }
  withLabel:manta{
    container = 'quay.io/biocontainers/manta:1.6.0--py27_0'
  }
  withLabel:sniffles{
  	container = 'quay.io/biocontainers/sniffles:2.0.7--pyhdfd78af_0'
  }
  withLabel:pbsv{
  	container = 'quay.io/jaxcompsci/pbsv-td_refs:2.8.0--h9ee0642_0'
  }
  withLabel:pbmm2{
  	container = 'quay.io/biocontainers/pbmm2:1.9.0--h9ee0642_0'
  }
  withLabel:survivor{
    container = 'quay.io/biocontainers/survivor:1.0.7--he513fc3_0'
  }
  withLabel:bedtools{
    container = 'quay.io/jaxcompsci/bedtools-sv_refs:2.30.0--hc088bd4_0'
  }
  withLabel:tidyverse{
    container = 'rocker/tidyverse:4.2.1'
  }
  withLabel:pyvcf{
    container = 'quay.io/jaxcompsci/biopython-pyvcf:1.78'
  }
  withLabel:pysam{
    container = 'quay.io/biocontainers/pysam:0.15.2--py36h02877da_7'
  }
  withLabel:picard{
    container = 'quay.io/biocontainers/picard:2.25.1--hdfd78af_1'
  }

  errorStrategy = 'finish'
}
executor.$slurm.queueSize = 1000
profiles {
  standard {
    process.executor = "local"
  }
  slurm {
    process.executor = "slurm"
    process.queue = "compute"
    process.clusterOptions = '-q batch'
    process.module = "slurm"
    process.cpus = 8
    process.time = '72:00:00'
    process.memory = '20 GB'
  }
  pbs {
    process.executor = "pbs"
    process.queue = "batch"
  }
  singularity {
    process.module = 'singularity'
    singularity.enabled = true
    singularity.autoMounts = true
//    singularity.runOptions = '--disable-cache'
  }
  conda {
    process.conda = "$baseDir/environment.yml"
  }

}
