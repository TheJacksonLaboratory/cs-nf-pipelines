/*___________________________________________________

             Nextflow DSL2 Main Config

  Authors: Anuj Srivastava, Carolyn Paisie, Barry Guglielmo, Michael Lloyd, Brian Sanderson, Sai Lek, Harshpreet Chandok, Peter Fields
       Copyright of Jackson Laboratories 2022

_____________________________________________________*/

params {
    // Select workflow
    workflow = 'rnaseq'

    // select config from config folder to use
    config = "config/${params.workflow}.config"

    // set publish directory for data to save (easier to follow)
    pubdir = "../${workflow}"

    // organize output:
    // by sample folders (with many analysis in one sample folder) or by
    // analysis folder (with many samples in one folder per analysis)

    organize_by = 'sample' // analysis
    keep_intermediate = false // true
    
    // get help
    help = null

    // make a comment for log
    comment = ''
}

// specific config for the pipeline


try {
    includeConfig params.config
} catch (Exception e) {
    System.err.println("ERROR: Could not load ${params.config} check that you are using a valid pipeline name")
}

// work directory is important as it will be large, plan accordingly
workDir = "/flashscratch/${USER}/${params.workflow}"

manifest {
    name = "The Jackson Laboratory Computational Sciences Nextflow based analysis pipelines"
    homePage = "https://github.com/TheJacksonLaboratory/cs-nf-pipelines"
    mainScript = "main.nf"
    nextflowVersion = "!>=22.04.3"
    version = "0.5.0"
}

profiles {
    sumner       { includeConfig "config/profiles/sumner.config" }
    elion        { includeConfig "config/profiles/elion.config" }
}

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')

report {
    enabled = true
    file = "${params.pubdir}/${params.workflow}_report_${trace_timestamp}.html"
    overwrite = true
}

trace {
    enabled = true
    file = "${params.pubdir}/trace/trace_${trace_timestamp}.txt"
    overwrite = true
    fields = \
         "task_id,"   \
       + "hash,"      \
       + "process,"   \
       + "tag,"       \
       + "status,"    \
       + "exit,"      \
       + "start,"     \
       + "container," \
       + "cpus,"      \
       + "time,"      \
       + "disk,"      \
       + "memory,"    \
       + "duration,"  \
       + "realtime,"  \
       + "queue,"     \
       + "%cpu,"      \
       + "%mem,"      \
       + "rss,"       \
       + "vmem,"      \
       + "rchar,"     \
       + "wchar"
}

dag {
    enabled = true
    file = "${params.pubdir}/trace/${params.workflow}_dagPlot_${trace_timestamp}.html"
    overwrite = true
}
