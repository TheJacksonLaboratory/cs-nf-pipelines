nextflow_workflow {

    name "Test Workflow CNV_ARRAY"
    script "workflows/cnv_array.nf"
    workflow "CNV_ARRAY"

    test("Full Workflow -- Required Params") {
        tag "RequiredParams"
        tag "primary"
        when {
            params {
                csv_input = "${baseDir}/test/cnv/data/example_sample_input.csv"
            }
        }

        then {
            assert workflow.success
        }
    }

    test("IAAP_CLI Process") {
        tag "IAAP_CLI"
        tag "process"
        when {
            params {
                outdir = "tests/results"
                idat_folder = "${baseDir}/test/cnv/idat_folder"
                bpm_file = "${baseDir}/test/cnv/bpm_file"
                egt_file = "${baseDir}/test/cnv/egt_file"
                csv_input = "${baseDir}/test/cnv/csv_input"
                gc_file = "${baseDir}/test/cnv/gc_file"
                rt_file = "${baseDir}/test/cnv/rt_file"
            }
        }

        then {
            assert workflow.success
            // assert GTC format files
            assert file("tests/results/iaap_cli_output.csv").exists()
        }
    }

    test("BCFTOOLS_GTC2VCF Process") {
        tag "BCFTOOLS_GTC2VCF"
        tag "process"
        when {
            params {
                outdir = "tests/results"
                idat_folder = "${baseDir}/test/cnv/idat_folder"
                bpm_file = "${baseDir}/test/cnv/bpm_file"
                egt_file = "${baseDir}/test/cnv/egt_file"
                csv_input = "${baseDir}/test/cnv/csv_input"
                gc_file = "${baseDir}/test/cnv/gc_file"
                rt_file = "${baseDir}/test/cnv/rt_file"
            }
        }

        then {
            assert workflow.success
            // assert the tsv, bcf, csi and vcf files 
            assert file("tests/results/bcftools_gtct2vcf_output.vcf").exists()
        }
    }

    test("BCFTOOLS_QUERY_ASCAT Process") {
        tag "BCFTOOLS_QUERY_ASCAT"
        tag "process"
        when {
            params {
                outdir = "tests/results"
                idat_folder = "${baseDir}/test/cnv/idat_folder"
                bpm_file = "${baseDir}/test/cnv/bpm_file"
                egt_file = "${baseDir}/test/cnv/egt_file"
                csv_input = "${baseDir}/test/cnv/csv_input"
                gc_file = "${baseDir}/test/cnv/gc_file"
                rt_file = "${baseDir}/test/cnv/rt_file"
            }
        }

        then {
            assert workflow.success
            // assert the files BAF and LRR 
            assert file("tests/results/bcftools_query_ascat_output.csv").exists()
        }
    }

    test("ASCAT Process") {
        tag "ASCAT"
        tag "process"
        when {
            params {
                outdir = "tests/results"
                idat_folder = "${baseDir}/test/cnv/idat_folder"
                bpm_file = "${baseDir}/test/cnv/bpm_file"
                egt_file = "${baseDir}/test/cnv/egt_file"
                csv_input = "${baseDir}/test/cnv/csv_input"
                gc_file = "${baseDir}/test/cnv/gc_file"
                rt_file = "${baseDir}/test/cnv/rt_file"
            }
        }

        then {
            assert workflow.success
            // Assert the files 
            assert file("tests/results/ascat_output.csv").exists()
        }
    }

    test("ASCAT_ANNOTATION Process") {
        tag "ASCAT_ANNOTATION"
        tag "process"
        when {
            params {
                outdir = "tests/results"
                idat_folder = "${baseDir}/test/cnv/idat_folder"
                bpm_file = "${baseDir}/test/cnv/bpm_file"
                egt_file = "${baseDir}/test/cnv/egt_file"
                csv_input = "${baseDir}/test/cnv/csv_input"
                gc_file = "${baseDir}/test/cnv/gc_file"
                rt_file = "${baseDir}/test/cnv/rt_file"
            }
        }

        then {
            assert workflow.success
            // assert the files .txt file and ploly file 
            assert file("tests/results/ascat_annotation_output.csv").exists()
        }
    }
}
