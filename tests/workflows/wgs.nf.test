nextflow_workflow {

    name "Test Workflow WGS"
    script "workflows/wgs.nf"
    workflow "WGS"

    test("Full Workflow -- Mouse -- GRCm38") {
        tag "GRCm38"
        tag "primary"
        when {
            params {
                gen_org = "mouse"
                csv_input = "https://raw.githubusercontent.com/TheJacksonLaboratory/cs-nf-test/refs/heads/main/wgs/mouse/mm10_WGS_input.csv"
                pubdir = "tests/results"
                pipeline = 'wgs'
            }
        }

        then {
            assert workflow.success
        }

    }

    test("Full Workflow -- Mouse -- GRCm38 -- Deduplicate, Coverage Cap, Split Fastq") {
        tag "GRCm38"
        tag "options"
        when {
            params {
                gen_org = "mouse"
                csv_input = "https://raw.githubusercontent.com/TheJacksonLaboratory/cs-nf-test/refs/heads/main/wgs/mouse/mm10_WGS_input.csv"
                pubdir = "tests/results"
                split_fastq = true
                split_fastq_bin_size = 1000
                deduplicate_reads
                coverage_cap = 50
                pipeline = 'wgs'
            }
        }

        then {
            assert workflow.success
        }

    }

    test("Full Workflow -- Mouse -- GRCm39") {
        tag "GRCm39"
        tag "primary"
        when {
            params {
                gen_org = "mouse"
                genome_build = "GRCm39"
                csv_input = "https://raw.githubusercontent.com/TheJacksonLaboratory/cs-nf-test/refs/heads/main/wgs/mouse/mm10_WGS_input.csv"
                pubdir = "tests/results"
                pipeline = 'wgs'
            }
        }

        then {
            assert workflow.success
        }

    }

    test("Full Workflow -- Human") {
        tag "GRCh38"
        tag "primary"
        when {
            params {
                gen_org = "human"
                csv_input = "https://raw.githubusercontent.com/TheJacksonLaboratory/cs-nf-test/refs/heads/main/wgs/human/hg38_WGS_input.csv"
                pubdir = "tests/results"
                pipeline = 'wgs'
            }
        }

        then {
            assert workflow.success
        }

    }


    test("Full Workflow -- Human -- Deduplicate, Coverage Cap, Split Fastq") {
        tag "GRCh38"
        tag "options"
        when {
            params {
                gen_org = "human"
                csv_input = "https://raw.githubusercontent.com/TheJacksonLaboratory/cs-nf-test/refs/heads/main/wgs/human/hg38_WGS_input.csv"
                pubdir = "tests/results"
                split_fastq = true
                split_fastq_bin_size = 1000
                deduplicate_reads
                coverage_cap = 50
                pipeline = 'wgs'
            }
        }

        then {
            assert workflow.success
        }

    }

    test("Full Workflow -- Mouse -- GRCm38 -- gvcf") {
        tag "GRCm38"
        tag "options"
        when {
            params {
                gen_org = "mouse"
                csv_input = "https://raw.githubusercontent.com/TheJacksonLaboratory/cs-nf-test/refs/heads/main/wgs/mouse/mm10_WGS_input.csv"
                pubdir = "tests/results"
                pipeline = 'wgs'
                run_gvcf = true
            }
        }

        then {
            assert workflow.success
        }

    }

    test("Full Workflow -- Human -- gvcf") {
        tag "GRCh38"
        tag "options"
        when {
            params {
                gen_org = "human"
                csv_input = "https://raw.githubusercontent.com/TheJacksonLaboratory/cs-nf-test/refs/heads/main/wgs/human/hg38_WGS_input.csv"
                pubdir = "tests/results"
                pipeline = 'wgs'
                run_gvcf = true
            }
        }

        then {
            assert workflow.success
        }

    }


    test("Full Workflow -- Mouse -- Individual Merge") {
        tag "GRCm38"
        tag "options"
        when {
            params {
                gen_org = "mouse"
                csv_input = "https://raw.githubusercontent.com/TheJacksonLaboratory/cs-nf-test/refs/heads/main/wgs/mouse/mm10_WGS_inds_input.csv"
                pubdir = "tests/results"
                pipeline = 'wgs'
                merge_ind = true
            }
        }

        then {
            assert workflow.success
        }

    }

    test("Full Workflow -- Human -- Individual Merge") {
        tag "GRCm38"
        tag "options"
        when {
            params {
                gen_org = "human"
                csv_input = "https://raw.githubusercontent.com/TheJacksonLaboratory/cs-nf-test/refs/heads/main/wgs/huamn/hg38_WGS_inds_input.csv"
                pubdir = "tests/results"
                pipeline = 'wgs'
                merge_ind = true
            }
        }

        then {
            assert workflow.success
        }

    }

    test("Full Workflow -- Mouse -- merge_ind Bad Input") {
        tag "GRCm38"
        tag "options"
        when {
            params {
                gen_org = "mouse"
                csv_input = "https://raw.githubusercontent.com/TheJacksonLaboratory/cs-nf-test/refs/heads/main/wgs/mouse/mm10_WGS_input.csv"
                pubdir = "tests/results"
                pipeline = 'wgs'
                merge_ind = true
            }
        }

        then {
            assert workflow.failed
        }

    }

    test("Full Workflow -- Mouse -- Deepvariant -- GVCF") {
        tag "GRCm38"
        tag "options"
        when {
            params {
                gen_org = "mouse"
                csv_input = "https://raw.githubusercontent.com/TheJacksonLaboratory/cs-nf-test/refs/heads/main/wgs/mouse/mm10_WGS_inds_input.csv"
                pubdir = "tests/results"
                pipeline = 'wgs'
                deepvariant = true
                run_gvcf = true
            }
        }

        then {
            assert workflow.success
        }

    }

    test("Full Workflow -- Human -- Deepvariant -- GVCF") {
        tag "GRCm38"
        tag "options"
        when {
            params {
                gen_org = "human"
                csv_input = "https://raw.githubusercontent.com/TheJacksonLaboratory/cs-nf-test/refs/heads/main/wgs/huamn/hg38_WGS_inds_input.csv"
                pubdir = "tests/results"
                pipeline = 'wgs'
                deepvariant = true
                run_gvcf = true
            }
        }

        then {
            assert workflow.success
        }

    }


}

// NEW TESTS NEEDED: Merge ind with deepvariant

// For sample merging, what if user provides mismatching information in one of the columns? 
