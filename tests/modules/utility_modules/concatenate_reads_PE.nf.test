nextflow_process {

    name "Test Process CONCATENATE_READS_PE"
    script "modules/utility_modules/concatenate_reads_PE.nf"
    process "CONCATENATE_READS_PE"

    test("Paired-End Data") {

        when {
            params {
                pipeline = 'pta'
                pubdir = "tests/results"
                read_type = "PE"
            }
            process {
                """
                input[0] = tuple('testSample_42', 
                [file('https://raw.githubusercontent.com/TheJacksonLaboratory/cs-nf-test/main/wgs/mouse/individual_lanes/mm10-WGS-sample_GT42-42424_TTTTTTTT-TTTTTTTT_S42_L001_R1.fastq.gz', checkIfExists: true), file('https://raw.githubusercontent.com/TheJacksonLaboratory/cs-nf-test/main/wgs/mouse/individual_lanes/mm10-WGS-sample_GT42-42424_TTTTTTTT-TTTTTTTT_S42_L002_R1.fastq.gz', checkIfExists: true)], 
                [file('https://raw.githubusercontent.com/TheJacksonLaboratory/cs-nf-test/main/wgs/mouse/individual_lanes/mm10-WGS-sample_GT42-42424_TTTTTTTT-TTTTTTTT_S42_L001_R2.fastq.gz', checkIfExists: true), file('https://raw.githubusercontent.com/TheJacksonLaboratory/cs-nf-test/main/wgs/mouse/individual_lanes/mm10-WGS-sample_GT42-42424_TTTTTTTT-TTTTTTTT_S42_L002_R2.fastq.gz', checkIfExists: true)]
                )
                """
            }
        }

        then {
            assert process.success
            assert snapshot(process.out).match()
        }

    }

}
